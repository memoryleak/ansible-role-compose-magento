---
compose_magento_project_name: magento2
compose_magento_project_domain: magento2.local
compose_magento_project_prefix: mg2
compose_magento_project_gateway: 172.20.0.1
compose_magento_hosts_file: /etc/hosts
compose_magento_base_directory: "/var/www/{{ compose_magento_project_name }}"
compose_magento_source_directory: "{{ compose_magento_base_directory }}/src"
compose_magento_data_directory: "{{ compose_magento_base_directory }}/data"
compose_magento_config_directory: "{{ compose_magento_base_directory }}/etc"
compose_magento_bin_directory: "{{ compose_magento_base_directory }}/bin"

compose_magento_composer_command: composer
compose_magento_composer_no_dev: false
compose_magento_compose_clean: false
compose_magento_compose_services_wait: []

compose_magento_nginx_vhost_template: "nginx/vhost.conf.j2"
compose_magento_nginx_document_root: "{{ compose_magento_source_directory }}"
compose_magento_nginx_use_domain: true
compose_magento_nginx_fastcgi_name: "fastcgi_{{ compose_magento_project_prefix }}"
compose_magento_nginx_upstream: "server {{ compose_magento_project_gateway }}:9000"
# Additional mounts for nginx
# - src: <path>
#   dest: <path>
compose_magento_nginx_mounts: []

compose_magento_image_nginx: "memoryleak/nginx:alpine"
compose_magento_image_php: "memoryleak/php:7.4"
compose_magento_image_mysql: "mysql:8"
compose_magento_image_elasticsearch: "memoryleak/elasticsearch:7.6.2"
compose_magento_image_redis: "redis:6"
compose_magento_image_rabbitmq: "rabbitmq:3.8-management"
compose_magento_image_mailhog: "mailhog/mailhog"

compose_magento_host_nginx: "nginx"
compose_magento_host_php: "php"
compose_magento_host_mysql: "mysql"
compose_magento_host_elasticsearch: "elasticsearch"
compose_magento_host_redis: "redis"
compose_magento_host_rabbitmq: "rabbitmq"
compose_magento_host_mailhog: "mailhog"

compose_magento_user_mysql: "magento"
compose_magento_user_rabbitmq: "magento"

compose_magento_password_mysql: "magento"
compose_magento_password_rabbitmq: "magento"

compose_magento_vhost_rabbitmq: "/magento"
compose_magento_database_mysql: "magento"

compose_magento_port_mysql: "3306"
compose_magento_port_elasticsearch: "9200"
compose_magento_port_redis: "6379"
compose_magento_port_rabbitmq: "5672"
compose_magento_port_nginx: "80"
compose_magento_port_php: "9000"
compose_magento_port_mailhog: "8025"

compose_magento_php_command: php
compose_magento_git_depth: 1  # values below 1 ignored
compose_magento_git_url: https://github.com/magento/magento2.git
compose_magento_git_version: "2.4"
compose_magento_git_force: false
compose_magento_git_skip: false
compose_magento_deploy_mode: "default"
compose_magento_deploy_command_pre:
  - "cd {{ compose_magento_nginx_document_root }}"

compose_magento_deploy_command_post:
  - "cd {{ compose_magento_nginx_document_root }}"
  - "{{ compose_magento_php_command }} -d memory_limit=-1 -d display_errors=1 bin/magento deploy:mode:set -s {{ compose_magento_deploy_mode }}"
  - "{{ compose_magento_php_command }} -d memory_limit=-1 -d display_errors=1 bin/magento setup:upgrade"
  - "{{ compose_magento_php_command }} -d memory_limit=-1 -d display_errors=1 bin/magento setup:di:compile"
  - "{{ compose_magento_php_command }} -d memory_limit=-1 -d display_errors=1 bin/magento maintenance:disable"
  - "{{ compose_magento_php_command }} -d memory_limit=-1 -d display_errors=1 bin/magento cache:clean"
  - "find var generated pub/static pub/media app/etc -type f -exec chmod g+w {} +"
  - "find var generated pub/static pub/media app/etc -type d -exec chmod g+ws {} +"

compose_magento_install_command_extra: []
compose_magento_install_command:
  - "{{ compose_magento_php_command }}"

  - "-d memory_limit=-1"
  - "-d display_errors=1"

  - "bin/magento setup:install"

  - "--backend-frontname='admin'"
  - "--currency='USD'"
  - "--language='en_US'"
  - "--timezone='Europe/Zurich'"
  - "--use-rewrites='1'"
  - "--use-secure-admin='0'"
  - "--use-secure='0'"

  - "--admin-email='admin@exmaple.com'"
  - "--admin-firstname='Admin'"
  - "--admin-lastname='Nistrator'"
  - "--admin-password='admin123'"
  - "--admin-user='admin'"

  - "--amqp-host='{{ compose_magento_host_rabbitmq }}'"
  - "--amqp-password='{{ compose_magento_password_rabbitmq }}'"
  - "--amqp-port='{{ compose_magento_port_rabbitmq }}'"
  - "--amqp-user='{{ compose_magento_user_rabbitmq }}'"
  - "--amqp-virtualhost='{{ compose_magento_vhost_rabbitmq }}'"

  - "--db-host='{{ compose_magento_host_mysql }}'"
  - "--db-name='{{ compose_magento_database_mysql }}'"
  - "--db-password='{{ compose_magento_password_mysql }}'"
  - "--db-user='{{ compose_magento_user_mysql }}'"

  - "--base-url-secure='https://{{ compose_magento_project_domain }}/'"
  - "--base-url='http://{{ compose_magento_project_domain }}/'"

  - "--cache-backend='redis'"
  - "--cache-backend-redis-db='2'"
  - "--cache-backend-redis-server='{{ compose_magento_host_redis }}'"

  - "--page-cache='redis'"
  - "--page-cache-redis-db='3'"
  - "--page-cache-redis-server='{{ compose_magento_host_redis }}'"

  - "--session-save='redis'"
  - "--session-save-redis-db='1'"
  - "--session-save-redis-host='{{ compose_magento_host_redis }}'"

compose_magento_nginx_config_extra: ""

compose_magento_nginx_vhost_extra: |
  # Deny access to sensitive files
  location /.user.ini {
      deny all;
  }

  # PHP entry point for setup application
  location ~* ^/setup($|/) {
      root $MAGE_ROOT;
      location ~ ^/setup/index.php {
          fastcgi_pass   {{ compose_magento_nginx_fastcgi_name }};
          fastcgi_read_timeout 600s;
          fastcgi_connect_timeout 600s;

          fastcgi_index  index.php;
          fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
          include        fastcgi_params;
      }

      location ~ ^/setup/(?!pub/). {
          deny all;
      }

      location ~ ^/setup/pub/ {
          add_header X-Frame-Options "SAMEORIGIN";
      }
  }

  # PHP entry point for update application
  location ~* ^/update($|/) {
      root $MAGE_ROOT;

      location ~ ^/update/index.php {
          fastcgi_split_path_info ^(/update/index.php)(/.+)$;
          fastcgi_pass   {{ compose_magento_nginx_fastcgi_name }};
          fastcgi_index  index.php;
          fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
          fastcgi_param  PATH_INFO        $fastcgi_path_info;
          include        fastcgi_params;
      }

      # Deny everything but index.php
      location ~ ^/update/(?!pub/). {
          deny all;
      }

      location ~ ^/update/pub/ {
          add_header X-Frame-Options "SAMEORIGIN";
      }
  }

  location / {
      try_files $uri $uri/ /index.php$is_args$args;
  }

  location /pub/ {
      location ~ ^/pub/media/(downloadable|customer|import|custom_options|theme_customization/.*\.xml) {
          deny all;
      }
      alias $MAGE_ROOT/pub/;
      add_header X-Frame-Options "SAMEORIGIN";
  }

  location .localtic/ {
      # Remove signature of the.localtic files that is used to overcome the browser cache
      location ~ ^.localtic/version\d*/ {
          rewrite ^.localtic/version\d*/(.*)$ .localtic/$1 last;
      }

      location ~* \.(ico|jpg|jpeg|png|gif|svg|svgz|webp|avif|avifs|js|css|eot|ttf|otf|woff|woff2|html|json|webmanifest)$ {
          add_header Cache-Control "public";
          add_header X-Frame-Options "SAMEORIGIN";
          expires +1y;

          if (!-f $request_filename) {
              rewrite ^.localtic/(version\d*/)?(.*)$ .localtic.php?resource=$2 last;
          }
      }
      location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
          add_header Cache-Control "no-store";
          add_header X-Frame-Options "SAMEORIGIN";
          expires    off;

          if (!-f $request_filename) {
             rewrite ^.localtic/(version\d*/)?(.*)$ .localtic.php?resource=$2 last;
          }
      }
      if (!-f $request_filename) {
          rewrite ^.localtic/(version\d*/)?(.*)$ .localtic.php?resource=$2 last;
      }
      add_header X-Frame-Options "SAMEORIGIN";
  }

  location /media/ {
      try_files $uri $uri/ /get.php$is_args$args;

      location ~ ^/media/theme_customization/.*\.xml {
          deny all;
      }

      location ~* \.(ico|jpg|jpeg|png|gif|svg|svgz|webp|avif|avifs|js|css|eot|ttf|otf|woff|woff2)$ {
          add_header Cache-Control "public";
          add_header X-Frame-Options "SAMEORIGIN";
          expires +1y;
          try_files $uri $uri/ /get.php$is_args$args;
      }
      location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
          add_header Cache-Control "no-store";
          add_header X-Frame-Options "SAMEORIGIN";
          expires    off;
          try_files $uri $uri/ /get.php$is_args$args;
      }
      add_header X-Frame-Options "SAMEORIGIN";
  }

  location /media/customer/ {
      deny all;
  }

  location /media/downloadable/ {
      deny all;
  }

  location /media/import/ {
      deny all;
  }

  location /media/custom_options/ {
      deny all;
  }

  location /errors/ {
      location ~* \.xml$ {
          deny all;
      }
  }

  # PHP entry point for main application
  location ~ ^/(index|get.localtic|errors/report|errors/404|errors/503|health_check)\.php$ {
      try_files $uri =404;
      fastcgi_pass   {{ compose_magento_nginx_fastcgi_name }};
      fastcgi_buffers 16 16k;
      fastcgi_buffer_size 32k;

      # fastcgi_param  PHP_FLAG  "session.auto.localrt=off \n suhosin.session.cryptua=off";
      # fastcgi_param  PHP_VALUE "memory_limit=756M \n max_execution_time=18000";
      fastcgi_read_timeout 600s;
      fastcgi_connect_timeout 600s;

      fastcgi_index  index.php;
      fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
      include        fastcgi_params;
  }

  gzip on;
  gzip_disable "msie6";

  gzip_comp_level 6;
  gzip_min_length 1100;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gzip_types
      text/plain
      text/css
      text/js
      text/xml
      text/javascript
      application/javascript
      application/x-javascript
      application/json
      application/xml
      application/xml+rss
      image/svg+xml;
  gzip_vary on;

  # Banned locations (only reached if the earlier PHP entry point regexes don't match)
  location ~* (\.php$|\.phtml$|\.htaccess$|\.git) {
      deny all;
  }
